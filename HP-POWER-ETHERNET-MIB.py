#
# PySNMP MIB module HP-POWER-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/michal/.snmp/mibs/HP-POWER-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Thu Jun  4 10:48:42 2020
# On host LogicAir.local platform Darwin version 19.5.0 by user michal
# Using Python version 3.7.3 (default, Apr 24 2020, 18:51:23)
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, MibIdentifier, Unsigned32, ObjectIdentity, NotificationType, Counter32, Gauge32, iso, Integer32, TimeTicks, IpAddress, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Unsigned32", "ObjectIdentity", "NotificationType", "Counter32", "Gauge32", "iso", "Integer32", "TimeTicks", "IpAddress", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
powerEthernetMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 105))
powerEthernetMIB.setRevisions(('2003-11-24 00:00',))
if mibBuilder.loadTexts: powerEthernetMIB.setLastUpdated('200311240000Z')
if mibBuilder.loadTexts: powerEthernetMIB.setOrganization('HP')
pethNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 0))
pethObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 1))
pethConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 2))
pethPsePortTable = MibTable((1, 3, 6, 1, 2, 1, 105, 1, 1), )
if mibBuilder.loadTexts: pethPsePortTable.setStatus('current')
pethPsePortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 105, 1, 1, 1), ).setIndexNames((0, "HP-POWER-ETHERNET-MIB", "pethPsePortGroupIndex"), (0, "HP-POWER-ETHERNET-MIB", "pethPsePortIndex"))
if mibBuilder.loadTexts: pethPsePortEntry.setStatus('current')
pethPsePortGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pethPsePortGroupIndex.setStatus('current')
pethPsePortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pethPsePortIndex.setStatus('current')
pethPsePortAdminEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortAdminEnable.setStatus('current')
pethPsePortPowerPairsControlAbility = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortPowerPairsControlAbility.setStatus('current')
pethPsePortPowerPairs = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signal", 1), ("spare", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortPowerPairs.setStatus('current')
pethPsePortDetectionStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("searching", 2), ("deliveringPower", 3), ("fault", 4), ("test", 5), ("otherFault", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortDetectionStatus.setStatus('current')
pethPsePortPowerPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("medium", 3), ("low", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortPowerPriority.setStatus('current')
pethPsePortMPSAbsentCounter = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortMPSAbsentCounter.setStatus('current')
pethPsePortType = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortType.setStatus('current')
pethPsePortPowerClassifications = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortPowerClassifications.setStatus('current')
pethPsePortInvalidSignatureCounter = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortInvalidSignatureCounter.setStatus('current')
pethPsePortPowerDeniedCounter = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortPowerDeniedCounter.setStatus('current')
pethPsePortOverLoadCounter = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortOverLoadCounter.setStatus('current')
pethPsePortShortCounter = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortShortCounter.setStatus('current')
pethMainPseObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 1, 3))
pethMainPseTable = MibTable((1, 3, 6, 1, 2, 1, 105, 1, 3, 1), )
if mibBuilder.loadTexts: pethMainPseTable.setStatus('current')
pethMainPseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1), ).setIndexNames((0, "HP-POWER-ETHERNET-MIB", "pethMainPseGroupIndex"))
if mibBuilder.loadTexts: pethMainPseEntry.setStatus('current')
pethMainPseGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pethMainPseGroupIndex.setStatus('current')
pethMainPsePower = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPsePower.setStatus('current')
pethMainPseOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("faulty", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseOperStatus.setStatus('current')
pethMainPseConsumptionPower = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1, 4), Gauge32()).setUnits('Milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseConsumptionPower.setStatus('current')
pethMainPseUsageThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethMainPseUsageThreshold.setStatus('current')
pethMainPseFWImageVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseFWImageVersion.setStatus('current')
pethNotificationControl = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 1, 4))
pethNotificationControlTable = MibTable((1, 3, 6, 1, 2, 1, 105, 1, 4, 1), )
if mibBuilder.loadTexts: pethNotificationControlTable.setStatus('current')
pethNotificationControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 105, 1, 4, 1, 1), ).setIndexNames((0, "HP-POWER-ETHERNET-MIB", "pethNotificationControlGroupIndex"))
if mibBuilder.loadTexts: pethNotificationControlEntry.setStatus('current')
pethNotificationControlGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pethNotificationControlGroupIndex.setStatus('current')
pethNotificationControlEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 105, 1, 4, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethNotificationControlEnable.setStatus('current')
pethPsePortOnOffNotification = NotificationType((1, 3, 6, 1, 2, 1, 105, 0, 1)).setObjects(("HP-POWER-ETHERNET-MIB", "pethPsePortDetectionStatus"))
if mibBuilder.loadTexts: pethPsePortOnOffNotification.setStatus('current')
pethMainPowerUsageOnNotification = NotificationType((1, 3, 6, 1, 2, 1, 105, 0, 2)).setObjects(("HP-POWER-ETHERNET-MIB", "pethMainPseConsumptionPower"))
if mibBuilder.loadTexts: pethMainPowerUsageOnNotification.setStatus('current')
pethMainPowerUsageOffNotification = NotificationType((1, 3, 6, 1, 2, 1, 105, 0, 3)).setObjects(("HP-POWER-ETHERNET-MIB", "pethMainPseConsumptionPower"))
if mibBuilder.loadTexts: pethMainPowerUsageOffNotification.setStatus('current')
pethCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 2, 1))
pethGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 105, 2, 2))
pethCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 105, 2, 1, 1)).setObjects(("HP-POWER-ETHERNET-MIB", "pethPsePortGroup"), ("HP-POWER-ETHERNET-MIB", "pethPsePortNotificationGroup"), ("HP-POWER-ETHERNET-MIB", "pethNotificationControlGroup"), ("HP-POWER-ETHERNET-MIB", "pethMainPseGroup"), ("HP-POWER-ETHERNET-MIB", "pethMainPowerNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethCompliance = pethCompliance.setStatus('current')
pethPsePortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 105, 2, 2, 1)).setObjects(("HP-POWER-ETHERNET-MIB", "pethPsePortAdminEnable"), ("HP-POWER-ETHERNET-MIB", "pethPsePortPowerPairsControlAbility"), ("HP-POWER-ETHERNET-MIB", "pethPsePortPowerPairs"), ("HP-POWER-ETHERNET-MIB", "pethPsePortDetectionStatus"), ("HP-POWER-ETHERNET-MIB", "pethPsePortPowerPriority"), ("HP-POWER-ETHERNET-MIB", "pethPsePortMPSAbsentCounter"), ("HP-POWER-ETHERNET-MIB", "pethPsePortInvalidSignatureCounter"), ("HP-POWER-ETHERNET-MIB", "pethPsePortPowerDeniedCounter"), ("HP-POWER-ETHERNET-MIB", "pethPsePortOverLoadCounter"), ("HP-POWER-ETHERNET-MIB", "pethPsePortShortCounter"), ("HP-POWER-ETHERNET-MIB", "pethPsePortType"), ("HP-POWER-ETHERNET-MIB", "pethPsePortPowerClassifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethPsePortGroup = pethPsePortGroup.setStatus('current')
pethMainPseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 105, 2, 2, 2)).setObjects(("HP-POWER-ETHERNET-MIB", "pethMainPsePower"), ("HP-POWER-ETHERNET-MIB", "pethMainPseOperStatus"), ("HP-POWER-ETHERNET-MIB", "pethMainPseConsumptionPower"), ("HP-POWER-ETHERNET-MIB", "pethMainPseUsageThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethMainPseGroup = pethMainPseGroup.setStatus('current')
pethNotificationControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 105, 2, 2, 3)).setObjects(("HP-POWER-ETHERNET-MIB", "pethNotificationControlEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethNotificationControlGroup = pethNotificationControlGroup.setStatus('current')
pethPsePortNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 105, 2, 2, 4)).setObjects(("HP-POWER-ETHERNET-MIB", "pethPsePortOnOffNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethPsePortNotificationGroup = pethPsePortNotificationGroup.setStatus('current')
pethMainPowerNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 105, 2, 2, 5)).setObjects(("HP-POWER-ETHERNET-MIB", "pethMainPowerUsageOnNotification"), ("HP-POWER-ETHERNET-MIB", "pethMainPowerUsageOffNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethMainPowerNotificationGroup = pethMainPowerNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HP-POWER-ETHERNET-MIB", pethMainPowerUsageOnNotification=pethMainPowerUsageOnNotification, pethPsePortGroup=pethPsePortGroup, pethObjects=pethObjects, pethMainPseGroupIndex=pethMainPseGroupIndex, PYSNMP_MODULE_ID=powerEthernetMIB, pethPsePortType=pethPsePortType, pethMainPowerUsageOffNotification=pethMainPowerUsageOffNotification, pethMainPowerNotificationGroup=pethMainPowerNotificationGroup, pethMainPseFWImageVersion=pethMainPseFWImageVersion, pethMainPseOperStatus=pethMainPseOperStatus, pethMainPseGroup=pethMainPseGroup, pethPsePortPowerClassifications=pethPsePortPowerClassifications, pethPsePortInvalidSignatureCounter=pethPsePortInvalidSignatureCounter, pethPsePortPowerDeniedCounter=pethPsePortPowerDeniedCounter, pethMainPseConsumptionPower=pethMainPseConsumptionPower, pethNotificationControlEntry=pethNotificationControlEntry, pethCompliance=pethCompliance, pethPsePortOverLoadCounter=pethPsePortOverLoadCounter, pethPsePortPowerPairs=pethPsePortPowerPairs, pethPsePortShortCounter=pethPsePortShortCounter, pethGroups=pethGroups, pethPsePortPowerPairsControlAbility=pethPsePortPowerPairsControlAbility, powerEthernetMIB=powerEthernetMIB, pethCompliances=pethCompliances, pethNotificationControl=pethNotificationControl, pethPsePortDetectionStatus=pethPsePortDetectionStatus, pethMainPseObjects=pethMainPseObjects, pethPsePortIndex=pethPsePortIndex, pethNotificationControlGroupIndex=pethNotificationControlGroupIndex, pethPsePortEntry=pethPsePortEntry, pethMainPseEntry=pethMainPseEntry, pethMainPseUsageThreshold=pethMainPseUsageThreshold, pethConformance=pethConformance, pethNotifications=pethNotifications, pethMainPseTable=pethMainPseTable, pethNotificationControlGroup=pethNotificationControlGroup, pethPsePortGroupIndex=pethPsePortGroupIndex, pethPsePortAdminEnable=pethPsePortAdminEnable, pethPsePortMPSAbsentCounter=pethPsePortMPSAbsentCounter, pethMainPsePower=pethMainPsePower, pethPsePortOnOffNotification=pethPsePortOnOffNotification, pethPsePortPowerPriority=pethPsePortPowerPriority, pethNotificationControlTable=pethNotificationControlTable, pethPsePortTable=pethPsePortTable, pethNotificationControlEnable=pethNotificationControlEnable, pethPsePortNotificationGroup=pethPsePortNotificationGroup)
